---
title: 'Sharing and Remixing content across Revealjs slides with Quarto Includes'
description: 'How I reused content and metadata across slides for a multi-day workshop with Quarto'
date: '2023-10-06'
date-modified: last-modified
# draft: true
categories:
  - quarto
  - teaching
  - slide design
image: carbon.png
# https://carbon.now.sh/?bg=rgba%28255%2C255%2C255%2C1%29&t=blackboard&wt=none&l=yaml&width=340&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=false&pv=69px&ph=55px&ln=false&fl=1&fm=Hack&fs=14px&lh=133%25&si=false&es=2x&wm=false&code=project%253A%250A%2520%2520output-dir%253A%2520_output%250A%2520%2520%250Ametadata-files%253A%250A%2520%2520-%2520_slides.yml
---

I recently ran a _Slidecraft_ show-and-tell session as part of a weekly Hacky Hour meetup for the NUMBATS research group in my department^[NUMBATS is the Non-Uniform Monash Business Analytics Team in the Department of Econometrics and Business Statistics at Monash Business School. See [this website](https://numbat.space/about.html) for more.]. The idea was for everyone to share something slide related like:

- Slide design tips, tricks and/or opinions,
- Slide-related problems that need solving,
- Quarto slide customisations or features.

I talked about how I used Quarto features to share metadata and content across slides for a multi-day _Quarto for Economists_ workshop I recently taught. This post is a longer, more documented version of what I discussed.

## Types of Includes

A few ways exist to include and reuse existing content in Quarto HTML documents (e.g., webpages and Revealjs slides). I won't explain in detail how these features work, but the footnotes include links to the relevant sections in the official Quarto documentation:

- Share YAML config options between `.qmd` files using Project and Directory metadata files or the `metadata-files:` YAML option.^[See [Shared Metadata](https://quarto.org/docs/projects/quarto-projects.html#shared-metadata)]
- Include the contents of code scripts as executable code chunks using the `#| file:` cell option.^[See [Code Cells: Knitr > Include](https://quarto.org/docs/reference/cells/cells-knitr.html#include)]
- Include contents from any text file at specific points in a `.qmd` file using the `{{< include >}}` shortcode.^[See [content and code examples](https://quarto.org/docs/authoring/includes.html)]
- Include the contents of code scripts, _verbatim_, as syntax-highlighted read-only code blocks using the `include-code-files` extension.^[See [quarto-ext/include-code-files](https://github.com/quarto-ext/include-code-files)]
- Include the contents of another file, _verbatim_, at pre-defined locations using the `include-in-header:`, `include-before-body:` and `include-after-body:` YAML options.^[See [HTML example](https://quarto.org/docs/output-formats/html-basics.html#includes) and [LaTex example](https://quarto.org/docs/output-formats/pdf-basics.html#latex-includes)]

The workshop had four sessions, with three content modules and a wrap-up within each session. It was my first time running this workshop, so I knew I'd probably need to update content for later sessions and move modules between sessions based on how the first day went. I used a combination of these features to:

- harmonise Revealjs slide options and features across all content modules and,
- easily update each session's wrap-up slides using content from within each module folder

I also used the `include-code-files` extension to include STATA scripts in Quarto documents as part of the workshop content, but I won't go into that here.

## Project structure

I used the following Quarto project structure for the workshop website and materials:

``` {.terminal code-line-numbers="false"}
.
â”œâ”€â”€ index.qmd
â”œâ”€â”€ about.qmd
...LICENSE,README.md,references.bib...
â”œâ”€â”€ 01a-hello-quarto
â”‚   â”œâ”€â”€ images
â”‚   â”œâ”€â”€ _wrap-up.qmd
â”‚   â”œâ”€â”€ index.qmd
â”‚   â””â”€â”€ slides.qmd
...01b/...01c/...
â”œâ”€â”€ 01d-wrap-up
â”‚   â”œâ”€â”€ _session-plan.qmd
â”‚   â”œâ”€â”€ index.qmd
â”‚   â””â”€â”€ slides.qmd
...02a/...04d/...
â”œâ”€â”€ _quarto.yml
â”œâ”€â”€ _slides.yml
â”œâ”€â”€ _slides-setup.R
â””â”€â”€ style
    â””â”€â”€ slides.scss
```

Every module had its own folder, and I used the `XXd-wrap-up` folders for session planning notes and summary content. Note that every module had both a website page (`index.qmd`) and a set of slides (`slides.qmd`). Here's the website page for the `01a-hello-quarto` module: [cynthiahqy.github.io/monash-quarto-aea/01a-hello-quarto/](https://cynthiahqy.github.io/monash-quarto-aea/01a-hello-quarto/)

## Includes for slide format and features

The slides for each module were all formatted the same way, with the same Revealjs theme options, slide transitions, slide numbers, etc.. I used the `#| file:` cell option to include a setup code chunk from the shared `_slides-setup.R` file:


````{.yaml filename="01a-hello-quarto/slides.qmd" code-line-numbers="true"}
---
title: "Hello Quarto"
subtitle: "Session 1: Getting to know Quarto"
date: 2023-07-18
format: revealjs
metadata-files:
  - ../_slides.yml
---

```{{r}}
#| label: setup
#| include: false
#| file: ../_slides-setup.R
```
````

Since all my slides were in different folders, sharing YAML options using the directory metadata file `_metadata.yml` wasn't an option. Instead I used the `metadata-files:` YAML option to share the same `_slides.yml` file across all of my slides. The only thing I had to be careful about was making sure I got the relative references correct. Even though `_slides.yml` and the `style/` folder were both in the root directory of my repo, I had to use `../style/slides.scss` to reference the custom CSS file. This is because the relative links are evaluated from the location of the `slides.qmd` file (i.e. inside the module folder `01a-hello-quarto/`) not the root directory of the repo.

```{.yaml filename="_slides.yml" code-line-numbers="false"}
author: "Cynthia Huang"
footer: "[ðŸ”— cynthiahqy.github.io/monash-quarto-aea](https://cynthiahqy.github.io/monash-quarto-aea)"
format:
  revealjs:
    theme: [default, ../style/slides.scss]
    transition: fade
    slide-number: true
    chalkboard: true
    date-format: full
```

Another option would have been to include the slide options in the Project metadata file `_quarto.yml`. One advantage of using the `metadata-files:` option is that you could potentially use multiple sets of metadata for different groups of slides within the same project (e.g. if you had different presenters for different modules).

```{.yaml filename="_quarto.yml"}
project:
  output-dir: _output

metadata-files:
  - _slides.yml
```

In addition to sharing YAML options, I also used a shared setup R script across all my slides. I used it to load the `{countdown}` package to insert countdown timers, but you could include other setup tasks too.

```{.r filename="_slides-setup.R" code-line-numbers="false"}
# set width of code output
options(width = 65)

# load packages
library(countdown)
```

## Includes for wrap-up slides

At the end of each session, I showed summary slides with key takeaways from each module. I used the `{{< include >}}` shortcode to pull in the content from each module's `_wrap-up.qmd` file:

```{.md filename="01d-wrap-up/slides.qmd" code-line-numbers="true"}
---
title: "Wrap-Up"
subtitle: "Session 1: Getting to Know Quarto"
date: 2023-07-18
format: revealjs
metadata-files:
  - ../_slides.yml
---

{{< include ../01a-hello-quarto/_wrap-up.qmd >}}

{{< include ../01b-formats/_wrap-up.qmd >}}

{{< include ../01c-articles/_wrap-up.qmd >}}

# Before lunch...

## Questions

::: task
Any questions / anything you'd like to review or learn before we wrap up the workshop?
:::

::: task
Suggestions / requests for things to cover in Thursday's session?
:::
```

This setup allowed me to move modules between sessions easily and ensured the wrap-up slides were always up-to-date with any content changes within modules.

## Final rendered slides

Here's the rendered version of the `01d-wrap-up/slides.qmd` file shown above:

::: {.column-body}

```{=html}
<iframe width="100%" height="500" src="https://cynthiahqy.github.io/monash-quarto-aea/01d-wrap-up/slides.html#/title-slide" title="Wrap Up Slides Example"></iframe>
```

:::

You can find the rest of the workshop content and slides here: [cynthiahqy.github.io/monash-quarto-aea](https://cynthiahqy.github.io/monash-quarto-aea). All the source files for the workshop content are also available in this repo: [github.com/cynthiahqy/monash-quarto-aea](https://github.com/cynthiahqy/monash-quarto-aea/tree/main)
