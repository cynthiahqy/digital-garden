{
  "hash": "58e1d0696a03d6c455905303401abe19",
  "result": {
    "markdown": "---\ntitle: 'Rendering my Quarto CV in HTML and PDF without LaTex'\ndescription: 'Forget LaTex. Publish multi-format documents from a single .qmd using weasyprint and some CSS stylesheet magic!'\ndate: '20230603'\ndate-modified: last-modified\ndraft: true\ncategories:\n  - css\n  - markdown\n  - quarto\n  - how-to\nimage: featured.png\n---\n\n\n## Multi-Format Sourcery\n\n### The Brief?\n\n<!--- multi-format CV using dynamic generation features of quarto --->\n<!--- Rob kindly wrote me a latex template... but it didn't quite translate to html --->\n\n### The Current Product\n\n- insert images\n\n## How I built it\n\n### A Chance Encounter and some sample code\n\n- Ran into @jimjam-slam at Mine's \"What's new in the tidyverse?\" talk\n- kindly pointed me to this issue where he worked through html2pdf options\n- https://github.com/quarto-dev/quarto-cli/discussions/2538\n\n### Hacking it together with some help of ChatGPT\n\n- color selectors\n- delete stuff and see if it still works\n- ask chatgpt to explain with examples! (started out asking about something else, but it was useful nonetheless)\n  - https://chat.openai.com/c/c5b58373-bf42-4c60-a2bd-ea4accd8c114\n\n## Do it yourself!\n\n### Quarto your content\n\nLet's keep things simple with just two sections:\n\n````md\n## Education\n\n::: {.cell}\n\n```{.r .cell-code}\n# import from orcid\n```\n:::\n\n## Work Experience\n\nlist it out!\n````\n\n### CSS magic\n\n- at-rules (@media, @page): https://developer.mozilla.org/en-US/docs/Web/CSS/@page\n- adjusting dimensions: https://doc.courtbouillon.org/weasyprint/stable/common_use_cases.html#adjust-document-dimensions\n- print-only / no-print classes\n- page breaks via style spans: https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/posts/11-spans/\n- page numbers: https://github.com/Kozea/WeasyPrint/issues/838\n\nstill to fix:\n- font-size\n- spacing between elements\n\n### BONUS: Deploying on Netlify\n\n- Render locally and publish `_site/`\n- Use the quarto-netlify-plugin\n- Add `weasyprint==59.0` to `requirements.txt` as in docs: https://docs.netlify.com/configure-builds/manage-dependencies/#install-using-pip",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}